/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.52 (Ubuntu)
 * Generated at: 2015-05-05 21:02:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.shoppingApp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<h2>Log In Page</h2>\r\n");
      out.write("<table>\r\n");
      out.write("    <tr>\r\n");
      out.write("        <td valign=\"top\">\r\n");
      out.write("            ");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("        </td>\r\n");
      out.write("        <td>\r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("            ");

            
            Connection conn = null;
            PreparedStatement pstmt = null;
            ResultSet rs = null;
            
            try {
                // Registering Postgresql JDBC driver with the DriverManager
                Class.forName("org.postgresql.Driver");

                // Open a connection to the database using DriverManager
                conn = DriverManager.getConnection(
                    "jdbc:postgresql://localhost/cse135?" +
                    "user=postgres&password=postgres");
            
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("            ");

                // Create the statement
                Statement statement = conn.createStatement();

                // Use the created statement to SELECT
                // the student attributes FROM the User table.
                
            
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            <table border=\"1\">\r\n");
      out.write("            <form action=\"login.jsp\" method=\"GET\">\r\n");
      out.write("\t            Username: <input type=\"text\" name=\"username\">\r\n");
      out.write("\t        \t<input type=\"hidden\" name=\"action\" value=\"login\"/>\r\n");
      out.write("\t        \t<td><input type=\"submit\" value=\"Log In\"></td>\r\n");
      out.write("\r\n");
      out.write("            </form>\r\n");
      out.write("\r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("            ");

                // Iterate over the ResultSet
                String action = (String) request.getParameter("action");
    			String username = (String) request.getParameter("username");

            	if(action != null && action.equals("login"))
            	{
            		
            		//String redirectURL1 = "http://www.google.com";
                    //response.sendRedirect(redirectURL1);
                     pstmt = conn
                    .prepareStatement("select * from users where name = ?");
                     
                     pstmt.setString(1, username);
                    

					  if(username != null)
					  {
						  rs = pstmt.executeQuery();
						  if(rs.next() && username.equals(rs.getString("name")))
						  {
						  	application.setAttribute("username", username);
						  	application.setAttribute("usertype", rs.getString("role"));
						  	String redirectURL = "home.jsp";
		                  	response.sendRedirect(redirectURL);
						  }
					  }
							  
				
					
            		//outputs that its an incorrect username
					 out.print(username + " not known. Please use a correct username in textbox.");
					 
            
				  }
            	
            	
       
    
            
      out.write("\r\n");
      out.write("            \r\n");
      out.write("         \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("            ");

                // Close the ResultSet
                if(rs != null) 
                {
                	rs.close();
                }

                // Close the Statement
                statement.close();

                // Close the Connection
                conn.close();
            } catch (SQLException e) {
            	//String redirectURL = "unsuccessful.html";
                //response.sendRedirect(redirectURL);
                
                // Wrap the SQL exception in a runtime exception to propagate
                // it upwards
                
                throw new RuntimeException(e);
            }
            finally {
                // Release resources in a finally block in reverse-order of
                // their creation

                if (rs != null) {
                    try {
                        rs.close();
                    } catch (SQLException e) { } // Ignore
                    rs = null;
                }
                if (pstmt != null) {
                    try {
                        pstmt.close();
                    } catch (SQLException e) { } // Ignore
                    pstmt = null;
                }
                if (conn != null) {
                    try {
                        conn.close();
                    } catch (SQLException e) { } // Ignore
                    conn = null;
                }
            }
            
      out.write("\r\n");
      out.write("        </table>\r\n");
      out.write("        </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("</table>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
