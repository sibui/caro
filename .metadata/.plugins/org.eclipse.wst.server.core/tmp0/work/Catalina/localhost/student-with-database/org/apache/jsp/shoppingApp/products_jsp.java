/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.52 (Ubuntu)
 * Generated at: 2015-05-05 21:05:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.shoppingApp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class products_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>Products</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<!--  Precursor text that must appear in every webpage -->\n");
      out.write("\t ");

     String username = (String) application.getAttribute("username");
	   String usertype = (String) application.getAttribute("usertype");
	   if( usertype != null && !usertype.equals("owner"))
	   {
		   //redirect to another html page since 
		   //you are a customer with no access to that page
		   String redirectURL = "noaccess.html";
         response.sendRedirect(redirectURL);
	   }
	   else if (username == null || usertype == null ) {
  	   String redirectURL = "login.jsp";
         response.sendRedirect(redirectURL);
     }
    
      out.write("\n");
      out.write("    Welcome, ");
      out.print(username);
      out.write("!\n");
      out.write("    \n");
      out.write(" \t<table>\n");
      out.write("\t\t<tr>\n");
      out.write("\t \t\t<td valign=\"top\">\n");
      out.write("\t        \t");
      out.write("\n");
      out.write("\t            ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/browser.html", out, false);
      out.write("\n");
      out.write("\t \t\t</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t</table>\n");
      out.write("\n");
      out.write("\n");
      out.write("<table>\n");
      out.write("    <tr>\n");
      out.write("\n");
      out.write("        <td>\n");
      out.write("            ");
      out.write("\n");
      out.write("            \n");
      out.write("            ");
      out.write("\n");
      out.write("            ");

            
            Connection conn = null;
            PreparedStatement pstmt = null;
            PreparedStatement pstmt2 = null;
            PreparedStatement pstmt3 = null;
            PreparedStatement pstmt4 = null;
            ResultSet rs = null;
            ResultSet rsCategory = null;

            
            
            
            try {
                // Registering Postgresql JDBC driver with the DriverManager
                Class.forName("org.postgresql.Driver");

                // Open a connection to the database using DriverManager
                conn = DriverManager.getConnection(
                    "jdbc:postgresql://localhost/cse135?" +
                    "user=postgres&password=postgres");
        		Statement categoryStatement1 = conn.createStatement();
            
      out.write("\n");
      out.write("            \n");
      out.write("            ");
 
          
	          rsCategory = categoryStatement1.executeQuery("SELECT categories.name FROM categories");
	      
			
      out.write("\n");
      out.write("\t\t\t   <b>Categories </b>\n");
      out.write("\t\t\t   <ul>\n");
      out.write("\t\t\t\t");

	          
	            String searchBar = request.getParameter("searchBar");
	            if(searchBar == null)
	            {
	            	searchBar = "";
	            }
	            
	            
				out.print("<li><a href=\"products.jsp\">All Products</a></li>");
				while(rsCategory.next()){
					out.print("<li><a href=\"products.jsp?search="+rsCategory.getString("name")+"&searchBar="+searchBar+"\">"+rsCategory.getString("name")+"</a></li>");
				}

	
	
      out.write("\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t</ul>\n");
      out.write("            \n");
      out.write("            ");
      out.write("\n");
      out.write("            ");

                String action = request.getParameter("action");
                // Check if an insertion is requested
                if (action != null && action.equals("insert")) {

                    // Begin transaction
                    conn.setAutoCommit(false);

                    // Create the prepared statement and use it to
                    // INSERT student values INTO the students table.
                    if(request.getParameter("name") != "" && request.getParameter("sku") != "" && request.getParameter("category") != "" && request.getParameter("price") != "") 
                    {    	
	                    
	                    pstmt = conn
	                    .prepareStatement("INSERT INTO products (name, sku, category, price) VALUES (?, ?, ?, ?)");
	
	                    pstmt.setString(1, request.getParameter("name"));
	                    pstmt.setString(2, request.getParameter("sku"));
	                    pstmt.setString(3, request.getParameter("category"));
	                    pstmt.setInt(4, Integer.parseInt(request.getParameter("price")));
	               
	
	                    
	                    Statement statement1 = conn.createStatement();
	                    //check to see if sku is unique
	                    pstmt2 = conn.prepareStatement("select * from products where sku = ?");
	                    pstmt2.setString(1, request.getParameter("sku"));
	                    rs = pstmt2.executeQuery();
	                    
	                    //check to see if category is a non-category
	                    pstmt3 = conn.prepareStatement("select categories.name from categories where name = ?");
	                    pstmt3.setString(1, request.getParameter("category")); //deals with injecting 
	                    
						//check for unique sku
	                    if (!rs.next()) 
	                    {
	                    	if( Integer.parseInt(request.getParameter("price")) > 0){
	                            
	                    		//out.print(Integer.parseInt(request.getParameter("price"))+"hi");
		                          rsCategory = pstmt3.executeQuery();

	                    		if(rsCategory.next()){
	   	                         int rowCount = pstmt.executeUpdate();
	                    		} 
	                    		else 
	                    		{
	                    			out.print("Failure to insert new product. Click <a href=\"products.jsp\">here</a> to try again.");
	                    		}
	                    	}
	                    	else
	                    	{
	                    		out.print("Failure to insert new product. Click <a href=\"products.jsp\">here</a> to try again.");
	                    	}
	                    	
	                         //int rowCount = pstmt.executeUpdate();
	                    }
	                    else
	                    {
	          				 out.print("Failure to insert new product. Click <a href=\"products.jsp\">here</a> to try again.");
	                    }
						
						
                    }
                    else
                    {
                    	out.print("Failure to insert new product. Click <a href=\"products.jsp\">here</a> to try again.");
                    }
                    // Commit transaction
                    conn.commit();
                    conn.setAutoCommit(true);
                    
                }
            
      out.write("\n");
      out.write("            \n");
      out.write("            ");
      out.write("\n");
      out.write("            ");

                // Check if an update is requested
                if (action != null && action.equals("update")) {

                    // Begin transaction
                    conn.setAutoCommit(false);

                    // Create the prepared statement and use it to
                    // UPDATE student values in the Students table.
                    pstmt = conn
                        .prepareStatement("UPDATE products SET name = ?, category = ?,price= ? WHERE sku = ?");
					if (request.getParameter("name") != "" && request.getParameter("price") != "") {
	                    pstmt.setString(1, request.getParameter("name"));
	                    pstmt.setString(4, request.getParameter("sku"));
	                    pstmt.setString(2, request.getParameter("category"));
	                    pstmt.setInt(3, Integer.parseInt(request.getParameter("price")));
	                    
	                    pstmt4 = conn
	                    	.prepareStatement("select * from products where sku = ?");
	                    pstmt4.setString(1, request.getParameter("sku"));
	                    
	                    int rowCount = pstmt.executeUpdate();
					}
					else {
						out.print("Failure to insert new product. Click <a href=\"products.jsp\">here</a> to try again.");
					}
                    // Commit transaction
                    conn.commit();
                    conn.setAutoCommit(true);
                }
            
      out.write("\n");
      out.write("            \n");
      out.write("            ");
      out.write("\n");
      out.write("            ");

                // Check if a delete is requested
                if (action != null && action.equals("delete")) {

                    // Begin transaction
                    conn.setAutoCommit(false);

                    // Create the prepared statement and use it to
                    // DELETE students FROM the Students table.
                    pstmt = conn
                        .prepareStatement("DELETE FROM products WHERE sku = ?");
                    //run another query to decrement based upon the category where the product is 
                    pstmt.setString(1, request.getParameter("sku"));
                    int rowCount = pstmt.executeUpdate();

                    // Commit transaction
                    conn.commit();
                    conn.setAutoCommit(true);
                }
            
      out.write("\n");
      out.write("\n");
      out.write("            ");
      out.write("\n");
      out.write("            ");

                // Create the statement
                Statement statement = conn.createStatement();
            
            //get search variable
            String search = request.getParameter("search");
            
            //search is for category links
            if(search == null)
            {	
            	search = "";
            }
            searchBar = request.getParameter("searchBar");
            if(searchBar == null)
            {
            	searchBar = "";
            }
            
            boolean isSearch = false;
            //if it's null, get ALL products
            if(!search.equals(""))
            {
            	isSearch = true;
            }
            
            	
            if(isSearch && searchBar.equals(""))
            {
            	pstmt = conn.prepareStatement("select * from products where category = ?");
            	pstmt.setString(1, search);
            }
            else if(isSearch && !searchBar.equals(""))
            {
            	pstmt = conn.prepareStatement("select * from products where category = ? and name like ?");
            	pstmt.setString(1, search);
            	pstmt.setString(2, searchBar);
            }
            else if(!isSearch && !searchBar.equals(""))
            {
            	pstmt = conn.prepareStatement("select * from products where name = ?");
            	pstmt.setString(1, searchBar);
            }
            else
            {
            	pstmt = conn.prepareStatement("select * from products");
            }
            
            
            
           rs = pstmt.executeQuery();
                // Use the created statement to SELECT
                // the student attributes FROM the Student table.
           
            
      out.write("\n");
      out.write("            <form action=\"products.jsp\" method=\"GET\">\n");
      out.write("            <b>Product Search:</b>\n");
      out.write("            <input value=\"\" name=\"searchBar\" size=10/>\n");
      out.write("            <input value=\"");
      out.print(search);
      out.write("\" name=\"search\" type=\"hidden\" />\n");
      out.write("            <input type=\"submit\" value=\"Search\"/>\n");
      out.write("            </form>\n");
      out.write("            <p>You searched for \"");
      out.print(searchBar );
      out.write("\" product.</p>\n");
      out.write("            <p>You searched for \"");
      out.print(search );
      out.write("\" category.</p>\n");
      out.write("            <br>\n");
      out.write("            <!-- Add an HTML table header row to format the results -->\n");
      out.write("            <table border=\"1\">\n");
      out.write("            <tr>\n");
      out.write("            \t<th>ID</th>\n");
      out.write("                <th>Name</th>\n");
      out.write("                <th>SKU</th>\n");
      out.write("                <th>Category</th>\n");
      out.write("                <th>Price</th>\n");
      out.write("            </tr>\n");
      out.write("\n");
      out.write("            <tr>\n");
      out.write("                <form action=\"products.jsp\" method=\"POST\">\n");
      out.write("                    <input type=\"hidden\" name=\"action\" value=\"insert\"/>\n");
      out.write("                    <th>&nbsp;</th>\n");
      out.write("                    <th><input value=\"\" name=\"name\" size=\"10\"/></th>\n");
      out.write("                    <th><input value=\"\" name=\"sku\" size=\"15\"/></th>\n");
      out.write("                    <input type=\"hidden\" name=\"search\" value=\"");
      out.print(search);
      out.write("\"/>\n");
      out.write("                    <input type=\"hidden\" name=\"searchBar\" value=\"");
      out.print(searchBar);
      out.write("\"/>\n");
      out.write("                    <th>\n");
      out.write("                    \t<!-- Start of dropdown for categories -->\n");
      out.write("\t\t\t        \t  <select name=\"category\">\n");
      out.write("\t\t\t        \t\t<option value=\"\">- Please Select -</option>\n");
      out.write("\t\t\t        \t\t");

			        		Statement categoryStatement = conn.createStatement();
                    		rsCategory = categoryStatement.executeQuery("select * from categories");
			        		while(rsCategory.next()) {
			        			out.print("<option value=\""+rsCategory.getString("name")+"\">"+rsCategory.getString("name")+"</option>");
			        		}
			        		
      out.write("\n");
      out.write("\t\t\t        \t\t\n");
      out.write("\t\t        \t\t  </select>\n");
      out.write("            \t\t\t<!-- End of dropdown -->\n");
      out.write("            \t\t</th>\n");
      out.write("                    <th><input value=\"\" name=\"price\" size=\"15\"/></th>\n");
      out.write("                    <th><input type=\"submit\" value=\"Insert\"/></th>\n");
      out.write("                </form>\n");
      out.write("            </tr>\n");
      out.write("\n");
      out.write("            ");
      out.write("\n");
      out.write("            ");

                // Iterate over the ResultSet
                while (rs.next()) {
            
      out.write("\n");
      out.write("\n");
      out.write("            <tr>\n");
      out.write("                <form action=\"products.jsp\" method=\"POST\">\n");
      out.write("                    <input type=\"hidden\" name=\"action\" value=\"update\"/>\n");
      out.write("                    <input type=\"hidden\" name=\"sku\" value=\"");
      out.print(rs.getString("sku"));
      out.write("\"/>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<td></td>\n");
      out.write("\n");
      out.write("                ");
      out.write("\n");
      out.write("                <td>\n");
      out.write("                    <input value=\"");
      out.print(rs.getString("name"));
      out.write("\" name=\"name\" size=\"15\"/>\n");
      out.write("                </td>\n");
      out.write("                \n");
      out.write("                ");
      out.write("\n");
      out.write("                <td>\n");
      out.write("                    ");
      out.print(rs.getString("sku"));
      out.write("\n");
      out.write("                </td>\n");
      out.write("                ");
      out.write("\n");
      out.write("                <td>\n");
      out.write("                    <!-- Start of dropdown for categories -->\n");
      out.write("\t\t\t        \t  <select name=\"category\">\n");
      out.write("\t\t\t        \t\t<option value=\"");
      out.print(rs.getString("category"));
      out.write('"');
      out.write('>');
      out.print(rs.getString("category"));
      out.write("</option>\n");
      out.write("\t\t\t        \t\t");

			        		Statement categoryStatement2 = conn.createStatement();
                    		String categoryDropdown = rs.getString("category");
                    		rsCategory = categoryStatement2.executeQuery("select * from categories where categories.name <> '"+categoryDropdown+"'");
			        		while(rsCategory.next()) {
			        			out.print("<option value=\""+rsCategory.getString("name")+"\">"+rsCategory.getString("name")+"</option>");
			        		}
			        		
      out.write("\n");
      out.write("\t\t\t        \t\t\n");
      out.write("\t\t        \t\t  </select>\n");
      out.write("            \t\t\t<!-- End of dropdown -->\n");
      out.write("                </td>\n");
      out.write("               \n");
      out.write("\t\t\t\t ");
      out.write("\n");
      out.write("                <td>\n");
      out.write("                    <input value=\"");
      out.print(rs.getInt("price"));
      out.write("\" name=\"price\" size=\"15\"/>\n");
      out.write("                </td>\n");
      out.write("               \n");
      out.write("\t\t\t\t\n");
      out.write("\n");
      out.write("\n");
      out.write("                ");
      out.write("\n");
      out.write("                <td><input type=\"submit\" value=\"Update\"></td>\n");
      out.write("                </form>\n");
      out.write("                <form action=\"products.jsp\" method=\"POST\">\n");
      out.write("                    <input type=\"hidden\" name=\"action\" value=\"delete\"/>\n");
      out.write("                    <input type=\"hidden\" value=\"");
      out.print(rs.getString("sku"));
      out.write("\" name=\"sku\"/>\n");
      out.write("                    ");
      out.write("\n");
      out.write("                <td><input type=\"submit\" value=\"Delete\"/></td>\n");
      out.write("                </form>\n");
      out.write("            </tr>\n");
      out.write("\n");
      out.write("            ");

                }
            
      out.write("\n");
      out.write("\n");
      out.write("            ");
      out.write("\n");
      out.write("            ");

                // Close the ResultSet
                rs.close();

                // Close the Statement
                statement.close();

                // Close the Connection
                conn.close();
            } catch (SQLException e) {

				 //out.print("Data modification failure. Please refresh the page.");
				
                throw new RuntimeException(e);
            }
            finally {
                // Release resources in a finally block in reverse-order of
                // their creation

                if (rs != null) {
                    try {
                        rs.close();
                    } catch (SQLException e) { } // Ignore
                    rs = null;
                }
                if (pstmt != null) {
                    try {
                        pstmt.close();
                    } catch (SQLException e) { } // Ignore
                    pstmt = null;
                }
                if (conn != null) {
                    try {
                        conn.close();
                    } catch (SQLException e) { } // Ignore
                    conn = null;
                }
            }
            
      out.write("\n");
      out.write("        </table>\n");
      out.write("        </td>\n");
      out.write("    </tr>\n");
      out.write("</table>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
